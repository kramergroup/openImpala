Bootstrap: docker
From: quay.io/rockylinux/rockylinux:8 # Using Quay.io

%help
    # ... (Help section) ...

%labels
    Maintainer "James Le Houx <your-email@example.com>" # <-- UPDATE EMAIL
    Version 2.35-deps-gcc11-link-deps-fix # <-- Updated version

%post
    set -e # Ensure commands exit on error early

    # Define versions used throughout the build
    export CMAKE_VERSION=3.28.3
    export OPENMPI_VERSION=4.1.6
    export HDF5_VERSION=1.12.3
    export AMREX_VERSION=23.11
    export HYPRE_VERSION=v2.30.0

    # Add ldconfig path
    echo "/usr/local/lib" > /etc/ld.so.conf.d/usrlocal.conf

    # Install base packages including build dependencies for MPI links
    dnf update -y; dnf install -y dnf-utils epel-release && dnf update -y
    dnf config-manager --set-enabled powertools
    dnf install -y \
        '@Development Tools' gcc-gfortran gcc-toolset-11 \
        wget git patch python3 python3-pip hostname \
        infiniband-diags libibverbs-devel libtiff-devel boost-devel \
        hwloc-devel libevent-devel flex bison flex-devel \
        which ca-certificates zlib-devel && \
    dnf clean all -y # Added zlib-devel

    # --- Define Install Prefixes ---
    export CMAKE_INSTALL_PREFIX=/opt/cmake/${CMAKE_VERSION}
    export OPENMPI_INSTALL_PREFIX=/usr/local # Standard prefix
    export HDF5_INSTALL_PREFIX=/opt/hdf5/${HDF5_VERSION}
    export AMREX_INSTALL_PREFIX=/opt/amrex/${AMREX_VERSION}
    export HYPRE_INSTALL_PREFIX=/opt/hypre/${HYPRE_VERSION}

    # Create a temporary directory for building dependencies
    mkdir /tmp/build_src && cd /tmp/build_src

    # --- Activate SCL and Install CMake ---
    echo "=== Sourcing GCC Toolset 11 enable script ==="
    source /opt/rh/gcc-toolset-11/enable
    # ... (CMake install and verification as before) ...
    export PATH=${CMAKE_INSTALL_PREFIX}/bin:${PATH}
    which cmake && cmake --version || exit 1
    which gcc && gcc --version | grep "(GCC) 11." || exit 1

    # --- Install OpenMPI ---
    # ... (OpenMPI configure, make, install, ldconfig as before) ...
    export PATH=${OPENMPI_INSTALL_PREFIX}/bin:${PATH}
    ldconfig
    which mpicc && mpicc --version || exit 1
    ldconfig -p | grep libmpi || echo "WARNING: libmpi not found in ldconfig cache"

    # --- Manual MPI-IO Test (Keep for sanity check) ---
    # ... (Manual test as before, using -L/usr/local/lib) ...

    # --- Install HDF5 ---
    echo "--- Building HDF5 ---"
    wget https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-${HDF5_VERSION%.*}/hdf5-${HDF5_VERSION}/src/hdf5-${HDF5_VERSION}.tar.gz --no-check-certificate
    tar -xzf hdf5-${HDF5_VERSION}.tar.gz && cd hdf5-${HDF5_VERSION}
    export CFLAGS="-O3 -march=native"; export CXXFLAGS="${CFLAGS}"; export FCFLAGS="${CFLAGS}"
    # --- Add common dependencies to LDFLAGS ---
    export LDFLAGS="-L/usr/local/lib -Wl,-rpath=/usr/local/lib -ldl -lm -lpthread -lrt -lutil -lz -levent -lhwloc -libverbs"
    echo "--- Running HDF5 configure with LDFLAGS=${LDFLAGS} ---"
    ./configure --prefix=${HDF5_INSTALL_PREFIX} --enable-parallel --enable-fortran --enable-fortran2003 --enable-cxx --enable-shared --disable-static --enable-unsupported
    unset LDFLAGS
    echo "--- HDF5 configure finished ---"
    make -j$(nproc) && make install # Serial install
    export PATH=${HDF5_INSTALL_PREFIX}/bin:${PATH} # Update PATH
    which h5pcc && h5pcc -showconfig || exit 1
    cd .. && rm -rf hdf5-${HDF5_VERSION}*

    # --- Install AMReX ---
    echo "--- Building AMReX ---"
    git clone --depth 1 --branch ${AMREX_VERSION} https://github.com/AMReX-Codes/amrex.git
    cd amrex && mkdir build && cd build
    # Add dependencies to CMake linker flags
    export LDFLAGS="-L/usr/local/lib -Wl,-rpath=/usr/local/lib -L${HDF5_INSTALL_PREFIX}/lib -Wl,-rpath=${HDF5_INSTALL_PREFIX}/lib -ldl -lm -lpthread -lrt -lutil -lz -levent -lhwloc -libverbs"
    echo "--- Running AMReX cmake with LDFLAGS=${LDFLAGS} applied ---"
    cmake .. -DCMAKE_INSTALL_PREFIX=${AMREX_INSTALL_PREFIX} \
        -DCMAKE_BUILD_TYPE=Release -DAMReX_MPI=ON -DAMReX_OMP=ON -DAMReX_EB=ON \
        -DCMAKE_CXX_FLAGS="-O3 -march=native" -DCMAKE_C_FLAGS="-O3 -march=native" -DCMAKE_Fortran_FLAGS="-O3 -march=native" \
        -DCMAKE_EXE_LINKER_FLAGS="${LDFLAGS}" -DCMAKE_SHARED_LINKER_FLAGS="${LDFLAGS}" -DCMAKE_MODULE_LINKER_FLAGS="${LDFLAGS}" \
        -DCMAKE_PREFIX_PATH="${HDF5_INSTALL_PREFIX};${OPENMPI_INSTALL_PREFIX}"
    unset LDFLAGS
    make -j$(nproc) && make install # Serial install
    cd ../.. && rm -rf amrex

    # --- Install HYPRE ---
    echo "--- Building HYPRE ---"
    git clone --depth 1 --branch ${HYPRE_VERSION} https://github.com/hypre-space/hypre.git
    cd hypre/src
    # Add dependencies to LDFLAGS
    export LDFLAGS="-L/usr/local/lib -Wl,-rpath=/usr/local/lib -ldl -lm -lpthread -lrt -lutil -lz -levent -lhwloc -libverbs"
    echo "--- Running HYPRE configure with LDFLAGS=${LDFLAGS} ---"
    ./configure --prefix=${HYPRE_INSTALL_PREFIX} --with-MPI --enable-shared \
        CFLAGS="-O3 -march=native" CXXFLAGS="-O3 -march=native"
    unset LDFLAGS
    make -j$(nproc) && make install # Serial install
    cd ../.. && rm -rf hypre

    echo "--- Dependency builds finished using GCC Toolset 11 ---"

    # --- Final Cleanup ---
    # ... (cleanup) ...

%environment
    # ... (Environment section unchanged, but ensure paths are correct based on final installs) ...
    source /opt/rh/gcc-toolset-11/enable
    export LC_ALL=C; export LANG=C
    export CMAKE_VERSION=3.28.3; export OPENMPI_VERSION=4.1.6; export HDF5_VERSION=1.12.3; export AMREX_VERSION=23.11; export HYPRE_VERSION=v2.30.0
    export CMAKE_INSTALL_PREFIX=/opt/cmake/${CMAKE_VERSION}
    export HDF5_INSTALL_PREFIX=/opt/hdf5/${HDF5_VERSION}
    export AMREX_INSTALL_PREFIX=/opt/amrex/${AMREX_VERSION}
    export HYPRE_INSTALL_PREFIX=/opt/hypre/${HYPRE_VERSION}
    export OPENMPI_INSTALL_PREFIX=/usr/local
    export CMAKE_HOME=${CMAKE_INSTALL_PREFIX}; export HDF5_HOME=${HDF5_INSTALL_PREFIX}; export AMREX_HOME=${AMREX_INSTALL_PREFIX}; export HYPRE_HOME=${HYPRE_INSTALL_PREFIX}; export H5CPP_HOME=${HDF5_HOME}; export TIFF_HOME=/usr
    export PATH=${CMAKE_HOME}/bin:${HDF5_HOME}/bin:${AMREX_HOME}/bin:${HYPRE_HOME}/bin:${OPENMPI_INSTALL_PREFIX}/bin:${PATH}
    export LD_LIBRARY_PATH=${HDF5_HOME}/lib:${AMREX_HOME}/lib:${HYPRE_HOME}/lib:${OPENMPI_INSTALL_PREFIX}/lib:${TIFF_HOME}/lib64:${LD_LIBRARY_PATH}
    export CMAKE_PREFIX_PATH=${HDF5_HOME}:${AMREX_HOME}:${HYPRE_HOME}:${OPENMPI_INSTALL_PREFIX}:${TIFF_HOME}:${CMAKE_PREFIX_PATH}
    export OMPI_MCA_btl_vader_single_copy_mechanism=none; export OMPI_MCA_rmaps_base_oversubscribe=1

%test
    # ... (Test section unchanged) ...

%runscript
    # ... (Runscript section unchanged) ...
