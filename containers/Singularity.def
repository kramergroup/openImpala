# Singularity Definition File for OpenImpala Application
# This is a MULTI-STAGE build file.
# It uses the pre-built dependency container to build the final application.

Bootstrap: docker
From: quay.io/rockylinux/rockylinux:8
Stage: build

# In this first stage, we just copy your local source code into a temporary location.
%files
    # Copy the entire local project directory (from the CI runner)
    # into /src inside this temporary build stage.
    . /src

%post
    # No build steps are needed here yet.

# --- Final Stage ---
# This is the actual container that will be saved.
Bootstrap: docker
From: quay.io/rockylinux/rockylinux:8
Stage: final

%help
    Container with the OpenImpala application and all its runtime dependencies.
    Built using a multi-stage process for efficiency and correctness.

%labels
    Maintainer "James Le Houx <james.lehoux@gre.ac.uk>"
    Version 3.0-app-amrex2503-hypre2320-gcc11

%files from build
    # Copy the source code from the 'build' stage into this final container.
    /src /opt/openImpala

# This post section copies all the pre-compiled libraries from your
# dependency container into this final container.
# It assumes 'dependency_image.sif' is in the build directory.
%post
    set -e
    echo "--- Copying libraries from dependency container ---"
    apptainer-cp -s dependency_image.sif /opt /
    apptainer-cp -s dependency_image.sif /usr/local /usr

    echo "--- Setting up runtime environment ---"
    # Update the dynamic linker cache to find all the newly copied libraries.
    ldconfig
    # Clean dnf cache to save space.
    dnf clean all

%install
    # This section runs inside the final container after all files are copied.
    # It builds your OpenImpala application using the pre-compiled dependencies.
    echo "--- Building OpenImpala ---"
    source /opt/rh/gcc-toolset-11/enable
    cd /opt/openImpala
    make -j$(nproc) all

%environment
    # This sets up the environment when a user runs the container.
    # It's copied and adapted from your Singularity.deps.def.
    source /opt/rh/gcc-toolset-11/enable
    export LC_ALL=C; export LANG=C

    export AMREX_VERSION=25.03
    export HYPRE_VERSION=v2.32.0
    export OPENMPI_VERSION=4.1.6
    export HDF5_VERSION=1.12.3
    export LIBTIFF_VERSION=4.6.0

    export AMREX_INSTALL_PREFIX=/opt/amrex/${AMREX_VERSION}
    export HYPRE_INSTALL_PREFIX=/opt/hypre/${HYPRE_VERSION}
    export OPENMPI_INSTALL_PREFIX=/usr/local
    export HDF5_INSTALL_PREFIX=/opt/hdf5/${HDF5_VERSION}
    export LIBTIFF_INSTALL_PREFIX=/opt/libtiff/${LIBTIFF_VERSION}
    export OPENIMPALA_INSTALL_DIR=/opt/openImpala

    export AMREX_HOME=${AMREX_INSTALL_PREFIX}
    export HYPRE_HOME=${HYPRE_INSTALL_PREFIX}
    export HDF5_HOME=${HDF5_INSTALL_PREFIX}
    export TIFF_HOME=${LIBTIFF_INSTALL_PREFIX}

    # Add OpenImpala executables to the PATH
    export PATH=${OPENIMPALA_INSTALL_DIR}/build/apps:${OPENIMPALA_INSTALL_DIR}/build/tests:${PATH}
    export PATH=${AMREX_HOME}/bin:${HYPRE_HOME}/bin:${HDF5_HOME}/bin:${LIBTIFF_INSTALL_PREFIX}/bin:${OPENMPI_INSTALL_PREFIX}/bin:${PATH}
    export LD_LIBRARY_PATH=${AMREX_HOME}/lib:${HYPRE_HOME}/lib:${HDF5_HOME}/lib:${LIBTIFF_INSTALL_PREFIX}/lib:${OPENMPI_INSTALL_PREFIX}/lib:${LD_LIBRARY_PATH}

    export OMPI_MCA_btl_vader_single_copy_mechanism=none
    export OMPI_MCA_rmaps_base_oversubscribe=1

%runscript
    echo "OpenImpala application container. Use 'apptainer exec <image> Diffusion <inputs>'."
    exec "$@"
